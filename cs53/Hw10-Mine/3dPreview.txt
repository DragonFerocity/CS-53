
 6    5   4   3   2   1   0  0   1   2   3   4   5   6
                         .~`  `~.
                     .~`          `~.
                 .~`                  `~.
                |`~.                  .~`|
                |`~.|`~.          .~`|.~`|
                |`~.|`~.|`~.  .~`|.~`|.~`|
             .~`4`~.|`~.|`~.||.~`|.~`|.~`1`~.           
         .~`5`~.1.~`4`~.|`~.||.~`|.~`2`~.4.~`1`~.
     .~`6`~.1.~`5`~.2.~`4`~.||.~`3`~.4.~`2`~.5.~`1`~.
 .~`7`~.1.~`6`~.2.~`5`~.3.~`04`~.4.~`3`~.5.~`2`~.6.~`1`~.
 `~.1.~`7`~.2.~`6`~.3.~`5`~.04.~`4`~.5.~`3`~.6.~`2`~.7.~`
     `~.2.~`7`~.3.~`6`~.4.~`05`~.5.~`4`~.6.~`3`~.7.~`
         `~.3.~`7`~.4.~`6`~.05.~`5`~.6.~`4`~.7.~`
             `~.4.~`7`~.5.~`06`~.6.~`5`~.7.~`
                 `~.5.~`7`~.06.~`6`~.7.~`
                     `~.6.~`07`~.7.~`
                         `~.07.~`
 6    5   4   3   2   1   0  0   1   2   3   4   5   6
                         .~`  `~.
                     .~`          `~.
                 .~`                  `~.
                |`~.     .~`01`~.     .~`|
                |`~.|.~`2`~.01.~`1`~.|.~`|
                |.~`3`~.1.~`02`~.2.~`1`~.|
             .~`4`~.1.~`3`~.02.~`2`~.3.~`1`~.           
         .~`5`~.1.~`4`~.2.~`03`~.3.~`2`~.4.~`1`~.
     .~`6`~.1.~`5`~.2.~`4`~.03.~`3`~.4.~`2`~.5.~`1`~.
 .~`7`~.1.~`6`~.2.~`5`~.3.~`04`~.4.~`3`~.5.~`2`~.6.~`1`~.
 `~.1.~`7`~.2.~`6`~.3.~`5`~.04.~`4`~.5.~`3`~.6.~`2`~.7.~`
     `~.2.~`7`~.3.~`6`~.4.~`05`~.5.~`4`~.6.~`3`~.7.~`
         `~.3.~`7`~.4.~`6`~.05.~`5`~.6.~`4`~.7.~`
             `~.4.~`7`~.5.~`06`~.6.~`5`~.7.~`
                 `~.5.~`7`~.06.~`6`~.7.~`
                     `~.6.~`07`~.7.~`
                         `~.07.~`
 6    5   4   3   2   1   0  0   1   2   3   4   5   6
                         .~`  `~.
                     .~`          `~.
                 .~`                  `~.
                |        .~`  `~.        |
                |    .~`          `~.    |
                |.~`                  `~.|
             .~`                          `~.           
         .~`                                  `~.
     .~`                                          `~.
 .~`                                                  `~.
 `~.                                                  .~`
     `~.                                          .~`
         `~.                                  .~`
             `~.                          .~`
                 `~.                  .~`
                     `~.          .~`
                         `~.  .~`
 _ _ _ _ 6 6 _ 
|0 1 2 | 5     |
|1   3 4       |
|_ _ _ |       |
|1 2           |
|1             |
|              |
|_ _ _ _ _ _ _ |
         
         
if (rand%2 == true && ((Pos[a+1][b] != 'S' && Pos[a+1][b] != 'D') || (Pos[a-1][b] != 'S' && Pos[a-1][b] != 'D')))
{
  if (pos == 0 && Pos[a+1][b] != 'S' && Pos[a+1][b] != 'D')
    x++
  else if (pos == MAX && Pos[a-1][b] != 'S' && Pos[a-1][b] != 'D')
    x--
  else 
  {
    if (rand%2 == true && Pos[a+1][b] != 'S' && Pos[a+1][b] != 'D')
      x++
    else if (Pos[a-1][b] != 'S' && Pos[a-1][b] != 'D')
      x--
  }
}
else if (Pos[a][b+1] != 'S' && Pos[a][b+1] != 'D' && Pos[a][b-1] != 'S' && Pos[a][b-1] != 'D')
  if (pos == 0)
    y++
  else if (pos == MAX)
    y--
  else 
  {
    if (true)
      y++
    else
      y--
  }
}

int LeastValue = trash[0].m_trashValue, Pos;
for (int i = 0; i < numItems; i++)
{
  if (trash[i].m_trashValue < LeastValue)
  {
    LeastValue = newTrash.m_trashValue;
    Pos = i;
  }
}
if (newTrash.m_trashValue > LeastValue)
{
  trash[Pos].m_trashValue = newTrash.m_trashValue;
  trash[Pos].m_name = newTrash.m_name;
}


1/2 = (0+1)*2 = 2
2/2 = (1+1)*2 = 4
3/2 = (1+1)*2 = 4
4/2 = (2+1)*2 = 6